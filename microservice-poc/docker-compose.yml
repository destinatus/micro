services:
  users-service:
    build:
      context: .
      dockerfile: Dockerfile
    deploy:
      replicas: 3
    environment:
      - POSTGRES_HOST=postgres-users-{{.Task.Slot}}
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=users_service_{{.Task.Slot}}
      - NODE_ENV=production
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - MICROSERVICE_HOST=0.0.0.0
      - MICROSERVICE_PORT=3001
      - REPLICA_ID={{.Task.Slot}}
    hostname: "users-service-{{.Task.Slot}}"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    depends_on:
      postgres-users-{{.Task.Slot}}:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 3001"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    networks:
      - microservice_net

  postgres-users-{{.Task.Slot}}:
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=users_service_{{.Task.Slot}}
      - POSTGRES_MAX_CONNECTIONS=200
    volumes:
      - postgres_data_users_{{.Task.Slot}}:/var/lib/postgresql/data
    command: 
      - "postgres"
      - "-c"
      - "max_connections=200"
      - "-c"
      - "shared_buffers=256MB"
      - "-c"
      - "wal_level=logical"
      - "-c"
      - "max_wal_senders=10"
      - "-c"
      - "max_replication_slots=10"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - microservice_net

networks:
  microservice_net:
    driver: bridge
    
volumes:
  postgres_data_users_{{.Task.Slot}}:
